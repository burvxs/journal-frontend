{"version":3,"sources":["constants/index.js","components/TaskItem.js","utils/index.js","components/CreateTask.js","components/D2DTasks.js","components/CategorisedTasks.js","components/SubCategoryList.js","components/StatSheet.js","components/CategoryList.js","components/WeeklyReview.js","components/Login.js","components/NavBar.js","components/FloatingTasks.js","routes.js","serviceWorker.js","index.js"],"names":["TASK_CREATE_URL","TASK_UPDATE_URL","TaskItem","props","refs","useState","isComplete","setIsComplete","onCompleteClass","setOnCompleteClass","userTask","task","setTask","priorityLevel","setPriorityLevel","solidifier","setSolidifier","isTaskEditing","setIsTaskEditing","isSolidifierEditing","setIsSolidifierEditing","isPriorityEditing","setIsPriorityEditing","useEffect","changeSolidifierEditMode","changePriorityEditMode","changeTaskEditMode","handleTaskEditMode","e","keyCode","handlePriorityEditMode","handleSolidifierEditMode","updatePriority","priority","target","value","axios","patch","id","then","res","data","catch","err","console","warn","updateSolidifier","log","updateTask","undefined","className","type","checked","onChange","JSON","stringify","autoFocus","onKeyDown","onDoubleClick","defaultValue","renderTasks","tasks","callback","onDataFail","Array","isArray","renderArray","map","item","Fragment","key","completed","loadRequestedTasks","request","setRequestedTasks","get","params","checkAuth","localStorage","getItem","generateCurrentDateString","currentDate","Date","pattern","date","compile","format","isSunday","getDay","CreateTask","state","setState","handleInput","preventDefault","name","validateInput","onSubmit","setTimeout","taskType","post","global","onCreate","submit","subListId","listId","readOnly","placeholder","hidden","D2DTasks","createdTask","setCreatedTask","allD2Dtasks","setAllD2DTasks","isSundayState","setIsSundayState","task_type","history","push","newTask","CategorisedTasks","associatedTasks","setAssociatedTasks","isMounted","fetchAssociatedTasks","list_id","match","SubCategoryList","list","setList","listText","setListText","handleClick","title","category_id","onClick","StatSheet","stats","grand_total","weekly_total","daily_total","incomplete_total","incomplete_weekly_total","incomplete_daily_total","CategoryList","categories","setCategories","categoryText","setCategoryText","handleItemClick","c","renderList","WeeklyReview","review","setReview","daily_review","rows","cols","Login","email","setEmail","password","setPassword","setIsError404","auth","setItem","jwt","location","autoComplete","NavBar","to","FloatingTasks","floaters","setFloaters","Routes","defaults","headers","common","Authorization","path","component","exact","render","onlyRenderReviewRouteIfSunday","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"6PAGaA,EAAkB,mCAMlBC,EAAkB,mC,gBC2KhBC,EAhLE,SAACC,EAAOC,GAAU,IAAD,EACMC,mBAASF,EAAMG,YADrB,mBACvBA,EADuB,KACXC,EADW,OAEgBF,qBAFhB,mBAEvBG,EAFuB,KAENC,EAFM,OAGNJ,mBAASF,EAAMO,UAHT,mBAGvBC,EAHuB,KAGjBC,EAHiB,OAIYP,mBAASF,EAAMU,eAJ3B,mBAIvBA,EAJuB,KAIRC,EAJQ,OAKMT,mBAASF,EAAMY,YALrB,mBAKvBA,EALuB,KAKXC,EALW,OAMYX,oBAAS,GANrB,mBAMvBY,EANuB,KAMRC,EANQ,OAOwBb,oBAAS,GAPjC,mBAOvBc,EAPuB,KAOFC,EAPE,OAQoBf,oBAAS,GAR7B,mBAQvBgB,EARuB,KAQJC,EARI,KA0B9BC,qBAAU,WACNpB,EAAMG,WACJG,EAAmB,aACnBA,EAAmB,MACtB,CAACN,EAAMG,aAEV,IAAMkB,EAA2B,WAC/BJ,GAAwBD,IAGpBM,EAAyB,WAC7BH,GAAsBD,IAGlBK,EAAqB,WACzBR,GAAkBD,IAGdU,EAAqB,SAACC,GACT,KAAdA,EAAEC,SACHH,KAIEI,EAAyB,SAACF,GACZ,KAAdA,EAAEC,SACJJ,KAIEM,EAA2B,SAACH,GACd,KAAdA,EAAEC,SACJL,KAIEQ,EAAiB,SAACJ,GACtB,IAAMK,EAAWL,EAAEM,OAAOC,MACxBC,IAAMC,MAAN,UAAepC,EAAf,YAAkCE,EAAMmC,IAAM,CAC5CL,SAAUA,IAEXM,MAAK,SAACC,GACL1B,EAAiB0B,EAAIC,KAAJ,mBAElBC,OAAM,SAACC,GAAD,OAASC,QAAQC,KAAKF,OAG3BG,EAAmB,SAAClB,GACtB,IAAIb,EAAaa,EAAEM,OAAOC,MAC1BS,QAAQG,IAAIhC,GACZqB,IAAMC,MAAN,UAAepC,EAAf,YAAkCE,EAAMmC,IAAM,CAC5C,WAAevB,IAEhBwB,MAAK,SAACC,GACLxB,EAAcwB,EAAIC,KAAJ,YACdG,QAAQG,IAAI,oBAAqBP,EAAIC,SAEtCC,OAAM,SAACC,GAAD,OAASC,QAAQC,KAAKF,OAG3BK,EAAa,SAACpB,GAClB,IAAIlB,EAAWkB,EAAEM,OAAOC,MACtBC,IAAMC,MAAN,UAAepC,EAAf,YAAkCE,EAAMmC,IAAM,CAC5C,KAAS5B,IAEV6B,MAAK,SAACC,QACiBS,IAAlBT,EAAIC,KAAK9B,MACXC,EAAQ4B,EAAIC,KAAK9B,MAEnBiC,QAAQG,IAAI,gBAAiBP,EAAIC,SAElCC,OAAM,SAACC,GAAD,OAASC,QAAQC,KAAKF,OAgEjC,OACE,yBAAKO,UAAU,eACb,2BACEC,KAAK,WACLC,QAAS9C,IAAc,EACvB+C,SA5JmB,SAACzB,GACtBrB,GAAeD,GAGbG,EAFDH,EAEoB,GADA,aAGrB8B,IAAMC,MAAN,UAAepC,EAAf,YAAkCE,EAAMmC,IAAM,CAC1C,YAAgBgB,KAAKC,WAAWjD,KAEnCiC,MAAK,SAACC,GACHI,QAAQG,IAAIP,MAEfE,OAAM,SAAAC,GAAG,OAAIC,QAAQG,IAAIJ,MAC1BC,QAAQG,IAAIzC,IAgJV4C,UAAS,UAAK1C,EAAL,OAlEVS,EAEC,2BACEkC,KAAK,OACLD,UAAS,UAAK1C,EAAL,KACT6C,SAAUL,EACVQ,WAAS,EACTC,UAAW9B,EACX+B,cAAehC,EACfiC,aAAchD,IAIX,uBAAGuC,UAAS,UAAK1C,EAAL,SAA6BkD,cAAehC,GAAqBf,GAKnFQ,EAEG,2BACEgC,KAAK,OACLD,UAAS,UAAK1C,EAAL,KACT6C,SAAUP,EACVU,WAAS,EACTC,UAAW1B,EACX2B,cAAelC,EACfmC,aAAc5C,IAIb,uBAAGmC,UAAS,UAAK1C,EAAL,SAA6BkD,cAAelC,GAA2BT,GAKxFM,EAEA,2BACE8B,KAAK,OACLD,UAAS,UAAK1C,GACd6C,SAAUrB,EACVwB,WAAS,EACTC,UAAW3B,EACX4B,cAAejC,EACfkC,aAAc9C,IAKhB,uBACEqC,UAAS,UAAK1C,GACdkD,cAAejC,GAEdZ,K,iBCzJA+C,EAAc,SAACC,GAAgC,IAAzBC,EAAwB,uDAAfC,EACxC,GAAIC,MAAMC,QAAQJ,GAAO,CACrB,IAAMK,EAAcL,EAAMM,KAAI,SAACC,GAC/B,OACI,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,EAAK9B,IACtB,kBAAC,EAAD,CACIzB,cAAeuD,EAAI,eACnB1D,SAAU0D,EAAKzD,KACfI,WAAYqD,EAAKrD,WACjBT,WAAY8D,EAAKG,UACjBjC,GAAI8B,EAAK9B,GACTgC,IAAKF,EAAK9B,SAKtB,OAAO4B,EAEPJ,KAIFC,EAAa,WACfnB,QAAQG,IAAI,oDAKHyB,EAAqB,SAACC,EAASC,GAAsC,IAAnBZ,EAAkB,uDAAT,KACpE1B,IAAMuC,IFjCoB,mCEiCA,CACtBC,OAAQH,IAEXlC,MAAK,SAACC,GACAqC,KACCH,EAAkB,YAAIlC,EAAIC,KAAJ,qBAEvBqB,GACCA,EAAStB,EAAIC,SAGpBC,OAAM,SAACC,GAAD,OAASC,QAAQC,KAAKF,OAGpBkC,EAAY,WACrB,MAAmC,SAAhCC,aAAaC,QAAQ,QAOfC,EAA4B,WACrC,IAAMC,EAAc,IAAIC,KAClBC,EAAUC,IAAKC,QAAQ,cAC7B,OAAOD,IAAKE,OAAOL,EAAaE,IAGvBI,EAAW,WAEpB,OAA6B,KADT,IAAIL,MACRM,U,gBCmCLC,EAhGI,SAACtF,GAAW,IAAD,EACAE,mBAAS,CAC/BQ,cAAgB,EAChBF,KAAO,GACPI,WAAa,KAJS,mBACnB2E,EADmB,KACZC,EADY,KAOpBC,EAAc,SAAChE,GACjBA,EAAEiE,iBACFF,EAAS,2BACFD,GADC,kBAEH9D,EAAEM,OAAO4D,KAAOlE,EAAEM,OAAOC,UAG5B4D,EAAgB,WAElB,OADAnD,QAAQG,IAAI2C,GACgB,KAAxBA,EAAM7E,eAA6C,KAArB6E,EAAM3E,YAAoC,KAAf2E,EAAM/E,MA8DvE,OACE,kBAAC,IAAM0D,SAAP,KACE,0BAAMnB,UAAU,WAAW8C,SAzDV,SAACpE,GAClBA,EAAEiE,iBACFjD,QAAQG,IAAIgD,KAEZE,YAAW,WACHF,KAAsC,QAAnB5F,EAAM+F,SACzB9D,IAAM+D,KAAKnG,EAAiB,CACxBW,KAAM+E,EAAM/E,KACZI,WAAY2E,EAAM3E,WAClBF,cAAe6E,EAAM7E,cACrBuF,QAAQ,IAEX7D,MAAK,SAACC,GACHrC,EAAMkG,SAAS7D,EAAIC,MACnBG,QAAQG,IAAI,cAAeP,EAAIC,MAC/Bb,EAAE0E,YAEL5D,OAAM,SAACC,GACJC,QAAQG,IAAIJ,MAEXoD,KAAsC,YAAnB5F,EAAM+F,SAC1B9D,IAAM+D,KAAKnG,EAAiB,CACxBW,KAAM+E,EAAM/E,KACZI,WAAY2E,EAAM3E,WAClBF,cAAe6E,EAAM7E,cACrB0F,UAAYpG,EAAMqG,OAClBJ,QAAQ,IAEX7D,MAAK,SAACC,GACHrC,EAAMkG,SAAS7D,EAAIC,MACnBG,QAAQG,IAAI,cAAeP,EAAIC,MACnCb,EAAE0E,YAED5D,OAAM,SAACC,GACJC,QAAQG,IAAIJ,MAEfoD,KAAsC,YAAnB5F,EAAM+F,UAC1B9D,IAAM+D,KAAKnG,EAAiB,CAC5BW,KAAM+E,EAAM/E,KACZI,WAAY2E,EAAM3E,WAClBF,cAAe6E,EAAM7E,cACrBuF,QAAQ,IAEP7D,MAAK,SAACC,GACPrC,EAAMkG,SAAS7D,EAAIC,MACnBG,QAAQG,IAAI,cAAeP,EAAIC,MAC/Bb,EAAE0E,YAED5D,OAAM,SAACC,GACRC,QAAQG,IAAIJ,QAGrB,OAMD,2BAAOQ,KAAK,WAAWsD,UAAQ,IAC/B,2BAAOX,KAAK,OAAOY,YAAY,yBAAyBvD,KAAK,OAAOE,SAAUuC,IAC9E,2BAAOE,KAAK,aAAaY,YAAY,6BAA6BvD,KAAK,OAAOE,SAAUuC,IACxF,2BACEzC,KAAK,OACL2C,KAAK,gBACLY,YAAY,sBACZrD,SAAUuC,IAEZ,4BAAQe,QAAM,EAACxD,KAAK,cCpDfyD,EApCE,SAACzG,GAAW,IAAD,EACcE,mBAAS,IADvB,mBACjBwG,EADiB,KACJC,EADI,OAEczG,mBAAS,IAFvB,mBAEjB0G,EAFiB,KAEJC,EAFI,OAGkB3G,oBAAS,GAH3B,mBAGjB4G,EAHiB,KAGFC,EAHE,KA4BxB,OANA3F,qBAAU,WACNiD,EAAmB,CAAE2C,UAAW,OAASH,GAVrCC,GACAC,EAAiB3B,KAEjB0B,IACA9G,EAAMiH,QAAQC,KAAK,WACnBH,GAAiB,MAOtB,IAID,kBAAC,IAAM7C,SAAP,KACE,kBAAC,EAAD,CAAYgC,SAzBQ,SAACiB,QACLrE,IAAZqE,IACAR,EAAeQ,GACfN,EAAe,GAAD,mBAAKD,GAAL,CAAkBF,OAsBGX,SAAS,QAC/CtC,EAAYmD,KCUNQ,EA1CU,SAACpH,GAAW,IAAD,EACcE,mBAAS,IADvB,mBACzBmH,EADyB,KACRC,EADQ,KAE5BC,GAAY,EAEVC,EAAuB,WACrBD,GACAlD,EACA,CACI2C,UAAW,cACXS,QAASzH,EAAM0H,MAAMjD,OAAO4B,QAEhCiB,IAuBR,OAlBAlG,qBAAU,WAIN,OAHAmG,GAAY,EACZC,IAEO,WACHD,GAAY,KAEjB,IAEHnG,qBAAU,WAIN,OAHAmG,GAAY,EACZC,IAEO,WACLD,GAAY,KAEf,CAACvH,EAAM0H,MAAMjD,OAAO4B,SAGnB,yBAAKtD,UAAU,iBACX,kBAAC,EAAD,CAAYgD,SAAS,UAAUM,OAAQrG,EAAM0H,MAAMjD,OAAO4B,SACzD5C,EAAY4D,KC4BVM,EAlES,SAAC3H,GAAW,IAAD,EACPE,mBAAS,IADF,mBACxB0H,EADwB,KAClBC,EADkB,OAEC3H,mBAAS,IAFV,mBAExB4H,EAFwB,KAEdC,EAFc,KAe/B3G,qBAAU,WAVNa,IAAMuC,INCiB,4CMAtBpC,MAAK,SAACC,GACHI,QAAQG,IAAIP,EAAIC,MAChBuF,EAAQxF,EAAIC,KAAJ,aAEXC,OAAM,SAACC,GACJC,QAAQC,KAAKF,QAMlB,IAEH,IAAMwF,EAAc,SAACvG,GACjBzB,EAAMiH,QAAQC,KAAd,6BAAyClH,EAAM0H,MAAMjD,OAAZ,YAAzC,YAA8EhD,EAAEM,OAAOI,MA4B3F,OACE,yBAAKY,UAAU,kBACb,0CACA,4BACE,4BACE,2BACIC,KAAK,OACLM,UAtBO,SAAC7B,GACC,KAAdA,EAAEC,SACDO,IAAM+D,KNjCgB,uCMiCS,CAC3BiC,MAAOH,EACPI,YAAalI,EAAM0H,MAAMjD,OAAZ,cAEhBrC,MAAK,SAAAC,GACFwF,EAAQ,GAAD,mBAAKD,GAAL,CAAWvF,EAAIC,WAEzBC,OAAM,SAAAC,GACHC,QAAQC,KAAKF,OAabU,SAAU,SAACzB,GAAD,OAAOsG,EAAYtG,EAAEM,OAAOC,QACtCuE,YAAY,mBAjCbqB,EAAK5D,KAAI,SAACC,GACb,OACI,wBAAIkE,QAASH,EAAa7D,IAAKF,EAAK9B,GAAIA,GAAI8B,EAAK9B,IAC5C8B,EAAKgE,aCwBXG,EAnDG,SAACpI,GAAW,IAAD,EACCE,mBAAS,IADV,mBAClBmI,EADkB,UA4CzB,OAJAjH,qBAAU,cAGP,IAEC,kBAAC,IAAM8C,SAAP,KAlCE,4BACE,4BACE,2DACCmE,EAAMC,aAET,4BACE,4DACCD,EAAME,cAET,4BACE,2DACCF,EAAMG,aAET,4BACE,4DACCH,EAAMI,kBAET,4BACE,6DACCJ,EAAMK,yBAET,4BACE,4DACCL,EAAMM,2BCuBNC,EAzDM,SAAC5I,GAAW,IAAD,EACQE,mBAAS,IADjB,mBACrB2I,EADqB,KACTC,EADS,OAEY5I,mBAAS,IAFrB,mBAErB6I,EAFqB,KAEPC,EAFO,KAgBtBC,EAAkB,SAACxH,GACrBzB,EAAMiH,QAAQC,KAAd,6BAAyCzF,EAAEM,OAAOI,MAuBtD,OAHAf,qBAAU,WAhCNa,IACCuC,IRHyB,yCQIzBpC,MAAK,SAACC,GACHyG,EAAczG,EAAIC,KAAJ,iBACdG,QAAQG,IAAIP,EAAIC,SAEnBC,OAAM,SAACC,GACJC,QAAQC,KAAKF,QA2BlB,IAEC,yBAAKO,UAAU,gBACX,0CACA,4BACI,4BACI,2BACIC,KAAK,OACLM,UApBG,SAAC7B,GACH,KAAdA,EAAEC,SACDO,IAAM+D,KRzBiB,wCQyBS,CAC5BiC,MAAOc,IAEV3G,MAAK,SAACC,GACHyG,EAAc,GAAD,mBAAKD,GAAL,CAAiBxG,EAAIC,YAe1BY,SAAU,SAACzB,GAAD,OAAOuH,EAAgBvH,EAAEM,OAAOC,QAC1CuE,YAAY,uBA7Bb,WACf,GAAG1C,MAAMC,QAAQ+E,GACb,OAAOA,EAAW7E,KAAI,SAACkF,GACnB,OAAO,wBAAIf,QAASc,EAAiB9G,GAAI+G,EAAE/G,GAAIgC,IAAK+E,EAAE/G,IAAK+G,EAAEjB,UA4B5DkB,MChBFC,EAnCM,SAACpJ,GAAW,IAAD,EACAE,mBAAS,IADT,mBACrBmJ,EADqB,KACbC,EADa,KAoB5B,OACE,6BACE,0BAAMzD,SAdW,SAACpE,GAClBA,EAAEiE,iBACFzD,IAAM+D,KTTmB,qCSSK,CAC1BuD,aAAcF,IAEjBjH,MAAK,SAACC,GACHI,QAAQG,IAAIP,GACZrC,EAAMiH,QAAQC,KAAK,WAEtB3E,OAAM,SAAAC,GAAG,OAAIC,QAAQC,KAAKF,QAMzB,8BACEmD,KAAK,SACL6D,KAAK,IACLC,KAAK,KACLvG,SAxBe,SAACzB,GACpBA,EAAEiE,iBACF4D,EAAU7H,EAAEM,OAAOC,UAwBjB,4BAAQgB,KAAK,UAAb,qBCwBK0G,EArDD,SAAC1J,GAAW,IAAD,EACKE,mBVQE,4BUTP,mBACdyJ,EADc,KACPC,EADO,OAEW1J,mBVQD,WUVV,mBAEd2J,EAFc,KAEJC,EAFI,OAGe5J,oBAAS,GAHxB,mBAGF6J,GAHE,WA6BrB,OACE,6BACE,qCACA,0BAAMlE,SA3BW,SAACpE,GAClBA,EAAEiE,iBACF,IAAMpB,EAAU,CACZ0F,KAAO,CACHL,MAAQA,EACRE,SAAWA,IAInB5H,IAAM+D,KVjBgB,mCUiBK1B,GAC1BlC,MAAK,SAAAC,GACFI,QAAQG,IAAIP,EAAIC,MAChBqC,aAAasF,QAAQ,MAAO5H,EAAIC,KAAK4H,KACrCzH,QAAQG,IAAI5C,EAAMiH,QAAQkD,UAC1BnK,EAAMiH,QAAQC,KAAK,WAEtB3E,OAAM,SAAAC,GACHuH,GAAc,GACdtH,QAAQC,KAAKF,MAGjBC,QAAQG,IAAI+B,aAAaC,QAAQ,UAO/B,yCACA,2BACE5B,KAAK,OACLE,SAAU,SAACzB,GAAD,OAAOmI,EAASnI,EAAEM,OAAOC,QACnCoI,aAAa,KACbpI,MAAO2H,IAET,4CACA,2BACE3G,KAAK,WACLE,SAAU,SAACzB,GAAD,OAAOqI,EAAYrI,EAAEM,OAAOC,QACtCA,MAAO6H,EACPO,aAAa,OAEf,4C,QC3BKC,EArBA,WAMX,OACE,yBAAKtH,UAAU,eACb,kBAAC,IAAD,CAAMuH,GAAG,OAAOvH,UAAU,kBAA1B,aAGA,kBAAC,IAAD,CAAMoF,QATK,WACXxD,aAAasF,QAAQ,MAAO,SAQLK,GAAG,GAAGvH,UAAU,kBAAvC,UAGA,kBAAC,IAAD,CAAMuH,GAAG,YAAYvH,UAAU,4BAA/B,oB,OCIOwH,EAjBO,WAAO,IAAD,EACQrK,mBAAS,IADjB,mBACjBsK,EADiB,KACPC,EADO,KASxB,OANArJ,qBAAU,WACNiD,EAAmB,CACf2C,UAAY,YACbyD,KACJ,IAGC,kBAAC,IAAMvG,SAAP,KACI,kBAAC,EAAD,CAAY6B,SAAS,YACpBtC,EAAY+G,KCmIVE,EA/HA,WAuBX,OX8BAzI,IAAM0I,SAASC,QAAQC,OAAOC,cAA9B,iBAAwDnG,aAAaC,QACrE,QW9BE,kBAAC,IAAD,KACE,6BACI,kBAAC,IAAD,CAAOmG,KAAK,IAAIC,UAAWX,IAzBG,WAClC,GAAIjF,IACA,OACE,kBAAC,IAAD,CACE6F,OAAK,EACLF,KAAK,UACLG,OAAQ,SAAClL,GACP,GAAK0E,EAGH,OACE,6BACE,kBAAC,EAAiB1E,IAJtBA,EAAMiH,QAAQC,KAAK,aAkB1BiE,GACD,kBAAC,IAAD,CAAOJ,KAAK,OAAOG,OAAQ,SAAClL,GACxB,GAAK0E,IAGD,OACI,yBAAK3B,UAAU,aACX,kBAAC,EAAc/C,IAJvBA,EAAMiH,QAAQC,KAAK,aAS3B,kBAAC,IAAD,CAAO+D,OAAK,EAACF,KAAK,YAAYG,OAAQ,SAAClL,GACnC,GAAK0E,IAGD,OACE,yBAAK3B,UAAU,kBACb,yBAAKA,UAAU,iBACb,kBAAC,EAAkB/C,IAErB,yBAAK+C,UAAU,eACb,kBAAC,EAAiB/C,KARxBA,EAAMiH,QAAQC,KAAK,aAc3B,kBAAC,IAAD,CAAO+D,OAAK,EAACF,KAAK,OAAOG,OAAQ,SAAClL,GAC9B,GAAK0E,IAGD,OACI,yBAAK3B,UAAU,kBACX,wBAAIZ,GAAG,eAAe0C,KACtB,yBAAK9B,UAAU,iBACX,kBAAC,EAAa/C,IAElB,yBAAK+C,UAAU,eACX,kBAAC,EAAiB/C,KAT9BA,EAAMiH,QAAQC,KAAK,aAgB3B,kBAAC,IAAD,CAAO+D,OAAK,EAACF,KAAK,kCAAkCG,OAAQ,SAAClL,GACzD,GAAK0E,IAGD,OACE,yBAAK3B,UAAU,kBACb,wBAAIZ,GAAG,eAAe0C,KACtB,yBAAK9B,UAAU,iBACb,kBAAC,EAAa/C,IAEhB,yBAAK+C,UAAU,eACb,kBAAC,EAAiB/C,GAClB,kBAAC,EAAoBA,KAV3BA,EAAMiH,QAAQC,KAAK,aAiB3B,kBAAC,IAAD,CAAO+D,OAAK,EAACF,KAAK,0CAA0CG,OAAQ,SAAClL,GACjE,GAAK0E,IAGD,OACE,6BACE,yBAAK3B,UAAU,kBACb,yBAAKZ,GAAG,WACR,yBAAKY,UAAU,iBACb,kBAAC,EAAqB/C,IAExB,yBAAK+C,UAAU,eACb,kBAAC,EAAiB/C,GAClB,kBAAC,EAAoBA,MAX7BA,EAAMiH,QAAQC,KAAK,aAkB3B,kBAAC,IAAD,CACI+D,OAAK,EACLF,KAAK,uBACLC,UAAW5D,IAEf,kBAAC,IAAD,CACI6D,OAAK,EACLF,KAAK,SACLC,UAAWtB,O,YChIP0B,QACW,cAA7BC,OAAOlB,SAASmB,UAEe,UAA7BD,OAAOlB,SAASmB,UAEhBD,OAAOlB,SAASmB,SAAS5D,MACvB,2DCXN6D,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzJ,MAAK,SAAA0J,GACJA,EAAaC,gBAEdxJ,OAAM,SAAAyJ,GACLvJ,QAAQuJ,MAAMA,EAAMC,c","file":"static/js/main.ca7834de.chunk.js","sourcesContent":["// AUTH ROUTES\nexport const LOGIN_AUTH_URL = \"http://localhost:3000/auth/login\";\nexport const USER_TASKS_URL = \"http://localhost:3000/auth/tasks\";\nexport const TASK_CREATE_URL = \"http://localhost:3000/auth/tasks\";\nexport const TRACKER_INDEX_URL = \"http://localhost:3000/auth/trackers\";\nexport const REVIEW_CREATE_URL = \"http://localhost:3000/auth/reviews\";\nexport const SUBLIST_CREATE_URL = \"http://localhost:3000/auth/sub_lists\";\nexport const CATEGORY_INDEX_URL = \"http://localhost:3000/auth/categories\";\nexport const CATEGORY_CREATE_URL = \"http://localhost:3000/auth/categories\";\nexport const TASK_UPDATE_URL = \"http://localhost:3000/auth/tasks\";\nexport const SUBLIST_GET_URL = \"http://localhost:3000/auth/user_sub_list\";\n\n// TEST LOGINS DELETE IN PRODUCTION\nexport const EMAIL_TEST_LOGIN = 'benny.purvis@hotmail.com';\nexport const PASSWORD_TEST_LOGIN = \"chicken\";\n","import React, {useState, useEffect} from 'react';\nimport {TASK_UPDATE_URL} from '../constants'\nimport axios from 'axios';\n\nconst TaskItem = (props, refs) => {\n    const [isComplete, setIsComplete] = useState(props.isComplete);\n    const [onCompleteClass, setOnCompleteClass] = useState();\n    const [task, setTask] = useState(props.userTask);\n    const [priorityLevel, setPriorityLevel] = useState(props.priorityLevel);\n    const [solidifier, setSolidifier] = useState(props.solidifier);\n    const [isTaskEditing, setIsTaskEditing] = useState(false);\n    const [isSolidifierEditing, setIsSolidifierEditing] = useState(false);\n    const [isPriorityEditing, setIsPriorityEditing] = useState(false);\n\n    const handleCompletion = (e) => {\n        setIsComplete(!isComplete);\n        !isComplete \n        ? setOnCompleteClass(\"completed\")\n        : setOnCompleteClass('');\n\n        axios.patch(`${TASK_UPDATE_URL}/${props.id}`, {\n            \"is_complete\" : JSON.stringify(!isComplete)\n        })\n        .then((res) => {\n            console.log(res)\n        })\n        .catch(err => console.log(err))\n        console.log(isComplete);\n    }\n    \n    useEffect(() => {\n        props.isComplete\n        ? setOnCompleteClass(\"completed\")\n        : setOnCompleteClass(\"\");\n    }, [props.isComplete]);\n\n    const changeSolidifierEditMode = () => {\n      setIsSolidifierEditing(!isSolidifierEditing)\n    }\n\n    const changePriorityEditMode = () => {\n      setIsPriorityEditing(!isPriorityEditing);\n    };\n\n    const changeTaskEditMode = () => {\n      setIsTaskEditing(!isTaskEditing);\n    }\n\n    const handleTaskEditMode = (e) => {\n      if(e.keyCode === 13){\n        changeTaskEditMode();\n      }\n    }\n\n    const handlePriorityEditMode = (e) => {\n      if (e.keyCode === 13) {\n        changePriorityEditMode();\n      }\n    };\n\n    const handleSolidifierEditMode = (e) => {\n      if (e.keyCode === 13) {\n        changeSolidifierEditMode();\n      }\n    };\n\n    const updatePriority = (e) => {\n      const priority = e.target.value;\n        axios.patch(`${TASK_UPDATE_URL}/${props.id}`, {\n          priority: priority,\n        })\n        .then((res) => {\n          setPriorityLevel(res.data[\"priority_level\"]);\n        })\n        .catch((err) => console.warn(err));\n    };\n\n    const updateSolidifier = (e) => {\n        let solidifier = e.target.value;\n        console.log(solidifier);\n        axios.patch(`${TASK_UPDATE_URL}/${props.id}`, {\n          \"solidifier\" : solidifier\n        })\n        .then((res) => {\n          setSolidifier(res.data[\"solidifier\"])\n          console.log(\"SETTING THE WHY? \", res.data)\n        })\n        .catch((err) => console.warn(err));\n    }\n\n    const updateTask = (e) => {\n      let userTask = e.target.value\n        axios.patch(`${TASK_UPDATE_URL}/${props.id}`, {\n          \"task\" : userTask\n        })\n        .then((res) => {\n          if (res.data.task !== undefined){\n            setTask(res.data.task);\n          }\n          console.log(\"SETTING TASK \", res.data)\n        })\n        .catch((err) => console.warn(err))\n    }\n\n    const renderSingleTask = () => {\n      if(isTaskEditing){\n        return (\n          <input\n            type=\"text\"\n            className={`${onCompleteClass} `}\n            onChange={updateTask}\n            autoFocus\n            onKeyDown={handleTaskEditMode}\n            onDoubleClick={changeTaskEditMode}\n            defaultValue={task}\n          />\n        );\n      }else{\n        return <p className={`${onCompleteClass} item`} onDoubleClick={changeTaskEditMode}>{task}</p>\n      }\n    }\n\n    const renderSolidifier = () => {\n      if(isSolidifierEditing){\n          return (\n            <input\n              type=\"text\"\n              className={`${onCompleteClass} `}\n              onChange={updateSolidifier}\n              autoFocus\n              onKeyDown={handleSolidifierEditMode}\n              onDoubleClick={changeSolidifierEditMode}\n              defaultValue={solidifier}\n            />\n        );\n      }else{\n        return <p className={`${onCompleteClass} item`} onDoubleClick={changeSolidifierEditMode}>{solidifier}</p>\n      }\n    }\n\n    const renderPriorityLevel = () => {\n      if (isPriorityEditing) {\n        return (\n          <input\n            type=\"text\"\n            className={`${onCompleteClass}`}\n            onChange={updatePriority}\n            autoFocus\n            onKeyDown={handlePriorityEditMode}\n            onDoubleClick={changePriorityEditMode}\n            defaultValue={priorityLevel}\n          />\n        );\n      } else {\n        return (\n          <p\n            className={`${onCompleteClass}`}\n            onDoubleClick={changePriorityEditMode}\n          >\n            {priorityLevel}\n          </p>\n        );\n      }\n    };\n\n    return (\n      <div className=\"itemWrapper\">\n        <input\n          type=\"checkbox\"\n          checked={isComplete || false}\n          onChange={handleCompletion}\n          className={`${onCompleteClass} `}\n        />\n        {renderSingleTask()}\n        {renderSolidifier()}\n        {renderPriorityLevel()}\n      </div>\n    );\n}\n\nexport default TaskItem;\n","import React from 'react'\nimport TaskItem from '../components/TaskItem'\nimport {USER_TASKS_URL} from '../constants'\nimport axios from 'axios'\nimport date from \"date-and-time\";\n\nexport const renderTasks = (tasks, callback=onDataFail) => {\n    if (Array.isArray(tasks)){\n        const renderArray = tasks.map((item) => {\n        return (\n            <React.Fragment key={item.id}>\n                <TaskItem\n                    priorityLevel={item[\"priority_level\"]}\n                    userTask={item.task}\n                    solidifier={item.solidifier}\n                    isComplete={item.completed}\n                    id={item.id}\n                    key={item.id}\n                />\n            </React.Fragment>\n        );\n        });\n        return renderArray;\n    }else{\n        callback();\n    }\n}\n\nconst onDataFail = () => {\n    console.log(\"Tasks havent been retrieved from the server yet\")\n}\n\n\n\nexport const loadRequestedTasks = (request, setRequestedTasks, callback=null) => {\n    axios.get(USER_TASKS_URL, {\n        params: request,\n    })\n    .then((res) => {\n        if(checkAuth()){\n            setRequestedTasks([...res.data[\"requested_task_set\"]]);\n        }\n        if(callback){\n            callback(res.data)\n        }\n    })\n    .catch((err) => console.warn(err));\n};\n\nexport const checkAuth = () => {\n    if(localStorage.getItem('jwt') === \"null\"){\n        return false;\n    }else{\n        return true;\n    }\n}\n\nexport const generateCurrentDateString = () => {\n    const currentDate = new Date();\n    const pattern = date.compile(\"MMM D YYYY\");\n    return date.format(currentDate, pattern);\n};\n\nexport const isSunday = () => {\n    const currentDate = new Date();\n    if (currentDate.getDay() === 4) {\n        return true;\n    }else{\n        return false;\n    }\n}\n\nexport const setDefaultHeaders = () => {\n    axios.defaults.headers.common.Authorization = `Bearer ${localStorage.getItem(\n    \"jwt\"\n    )}`;\n};\n","import React, {useState} from 'react';\nimport {TASK_CREATE_URL} from '../constants'\nimport axios from 'axios'\n\nconst CreateTask = (props) => {\n    const [state, setState] = useState({\n        priorityLevel : 0,\n        task : '',\n        solidifier : ''\n    })\n\n    const handleInput = (e) => {\n        e.preventDefault();\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        })\n    }\n    const validateInput = () => {\n        console.log(state);\n        if (state.priorityLevel === '' || state.solidifier === '' || state.task === ''){\n            return false\n        }else{\n            return true\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(validateInput());\n\n        setTimeout(() => {\n            if (validateInput() && props.taskType === \"D2D\") {\n                axios.post(TASK_CREATE_URL, {\n                    task: state.task,\n                    solidifier: state.solidifier,\n                    priorityLevel: state.priorityLevel,\n                    global: false,\n                })\n                .then((res) => {\n                    props.onCreate(res.data);\n                    console.log(\"POST DATA: \", res.data);\n                    e.submit();\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n            }else if(validateInput() && props.taskType === \"SUBLIST\"){\n                    axios.post(TASK_CREATE_URL, {\n                        task: state.task,\n                        solidifier: state.solidifier,\n                        priorityLevel: state.priorityLevel,\n                        subListId : props.listId,\n                        global: false,\n                    })\n                    .then((res) => {\n                        props.onCreate(res.data);\n                        console.log(\"POST DATA: \", res.data);\n                    e.submit();\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            }else if(validateInput() && props.taskType === \"FLOATER\"){\n                    axios.post(TASK_CREATE_URL, {\n                    task: state.task,\n                    solidifier: state.solidifier,\n                    priorityLevel: state.priorityLevel,\n                    global: true,\n                    })\n                    .then((res) => {\n                    props.onCreate(res.data);\n                    console.log(\"POST DATA: \", res.data);\n                    e.submit();\n                    })\n                    .catch((err) => {\n                    console.log(err);\n                    });\n            }\n        }, 500);\n    }\n\n    return (\n      <React.Fragment>\n        <form className=\"taskForm\" onSubmit={handleSubmit}>\n          <input type=\"checkbox\" readOnly />\n          <input name=\"task\" placeholder=\"Your task. Get it done\" type=\"text\" onChange={handleInput} />\n          <input name=\"solidifier\" placeholder=\"The solidifier. eg Get fit\" type=\"text\" onChange={handleInput} />\n          <input\n            type=\"text\"\n            name=\"priorityLevel\"\n            placeholder=\"Your priority level\"\n            onChange={handleInput}\n          />\n          <button hidden type=\"submit\"></button>\n        </form>\n      </React.Fragment>\n    );\n}\n\nexport default CreateTask;\n","import React, {useState, useEffect} from 'react';\n\nimport {renderTasks, loadRequestedTasks, isSunday} from \"../utils\"\n\nimport CreateTask from './CreateTask'\n\nconst D2DTasks = (props) => {\n    const [createdTask, setCreatedTask] = useState({})\n    const [allD2Dtasks, setAllD2DTasks] = useState([]);\n    const [isSundayState, setIsSundayState] = useState(false);\n\n    const passCreatedTask = (newTask) => {\n        if (newTask !== undefined){\n            setCreatedTask(newTask);\n            setAllD2DTasks([...allD2Dtasks, createdTask]);\n        }\n    }\n\n    const ifSundayRedirectForReview = () => {\n        if(!isSundayState){\n            setIsSundayState(isSunday());\n        }\n        if (isSundayState){\n            props.history.push(\"/review\");\n            setIsSundayState(false)\n        }\n    }\n\n    useEffect(() => {\n        loadRequestedTasks({ task_type: \"D2D\" }, setAllD2DTasks);\n        ifSundayRedirectForReview();  \n    }, []);\n\n\n    return (\n      <React.Fragment>\n        <CreateTask onCreate={passCreatedTask} taskType=\"D2D\" />\n        {renderTasks(allD2Dtasks)}\n      </React.Fragment>\n    );\n}\n\nexport default D2DTasks;\n","import React, {useState, useEffect} from 'react';\nimport {renderTasks, loadRequestedTasks} from '../utils'\nimport {CATEGORY_INDEX_URL} from '../constants'\nimport CreateTask from \"./CreateTask\";\n\nconst CategorisedTasks = (props) => {\n    const [associatedTasks, setAssociatedTasks] = useState([]);\n    let isMounted = false;\n\n    const fetchAssociatedTasks = () => {\n        if (isMounted) {\n            loadRequestedTasks(\n            {\n                task_type: \"CATEGORISED\",\n                list_id: props.match.params.listId,\n            },\n            setAssociatedTasks\n            );\n        }\n    }\n\n    useEffect(() => {\n        isMounted = true   \n        fetchAssociatedTasks();\n\n        return () => {\n            isMounted = false\n        }\n    }, [])\n\n    useEffect(() => {\n        isMounted = true;\n        fetchAssociatedTasks();\n\n        return () => {\n          isMounted = false;\n        };\n    }, [props.match.params.listId])\n\n    return (\n        <div className=\"taskContainer\">\n            <CreateTask taskType=\"SUBLIST\" listId={props.match.params.listId}/>\n            {renderTasks(associatedTasks)}\n        </div>\n    );\n}\n\nexport default CategorisedTasks;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {SUBLIST_GET_URL, SUBLIST_CREATE_URL} from '../constants'\n\nconst SubCategoryList = (props) => {\n    const [list, setList] = useState([]);\n    const [listText, setListText] = useState([]);\n\n    const fetchSubList = () => {\n        axios.get(SUBLIST_GET_URL)\n        .then((res) => {\n            console.log(res.data);\n            setList(res.data[\"sub_list\"]);\n        })\n        .catch((err) => {\n            console.warn(err);\n        });\n    }\n\n    useEffect(() => {\n        fetchSubList();\n    }, []);\n\n    const handleClick = (e) => {\n        props.history.push(`/category_sub_list/${props.match.params[\"category_id\"]}/${e.target.id}`)\n    }\n\n    const renderList = () => {\n        return list.map((item) => {\n            return (\n                <li onClick={handleClick} key={item.id} id={item.id}>\n                    {item.title}\n                </li>\n            );\n        });\n    };\n\n    const submitList = (e) => {\n        if(e.keyCode === 13){\n            axios.post(SUBLIST_CREATE_URL, {\n                title: listText,\n                category_id: props.match.params[\"category_id\"]\n            })\n            .then(res => {\n                setList([...list, res.data])\n            })\n            .catch(err => {\n                console.warn(err);\n            })\n        }\n    }\n\n    return (\n      <div className=\"sublistWrapper\">\n        <h3>Your lists</h3>\n        <ul>\n          <li>\n            <input\n                type=\"text\"\n                onKeyDown={submitList}\n                onChange={(e) => setListText(e.target.value)}\n                placeholder=\"Create a list\"\n            />\n          </li>\n          {renderList()}\n        </ul>\n      </div>\n    );\n}\n\nexport default SubCategoryList;\n","import React, {useState, useEffect} from 'react';\nimport { TRACKER_INDEX_URL } from \"../constants\";\nimport axios from 'axios';\n\nconst StatSheet = (props) => {\n    const [stats, setStats] = useState({});\n\n    const fetchStats = () => {\n        axios.get(TRACKER_INDEX_URL)\n        .then(res => setStats(res.data))\n        .catch(err => console.warn(err));\n    }\n\n    const displayStats = () => {\n        return (\n          <ul>\n            <li>\n              <strong>Grand Completed Total: </strong>\n              {stats.grand_total}\n            </li>\n            <li>\n              <strong>Weekly Completed Total: </strong>\n              {stats.weekly_total}\n            </li>\n            <li>\n              <strong>Daily Completed Total: </strong>\n              {stats.daily_total}\n            </li>\n            <li>\n              <strong>Grand Incomplete Total: </strong>\n              {stats.incomplete_total}\n            </li>\n            <li>\n              <strong>Weekly Incomplete Total: </strong>\n              {stats.incomplete_weekly_total}\n            </li>\n            <li>\n              <strong>Daily Incomplete Total: </strong>\n              {stats.incomplete_daily_total}\n            </li>\n          </ul>\n        );\n    }\n\n    useEffect(() => {\n        //fetchStats();\n        //setInterval(fetchStats, 3000);\n    }, [])\n    return (\n        <React.Fragment>\n            {displayStats()}\n        </React.Fragment>\n    );\n}\n\nexport default StatSheet;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport {CATEGORY_INDEX_URL, CATEGORY_CREATE_URL } from \"../constants\";\n\nconst CategoryList = (props) => {\n    const [categories, setCategories] = useState([]);\n    const [categoryText, setCategoryText] = useState(\"\");\n\n    const fetchCategories = () => {\n        axios\n        .get(CATEGORY_INDEX_URL)\n        .then((res) => {\n            setCategories(res.data[\"user_categories\"]);\n            console.log(res.data);\n        })\n        .catch((err) => {\n            console.warn(err);\n        });\n    };\n\n    const handleItemClick = (e) => {\n        props.history.push(`/category_sub_list/${e.target.id}`)\n    }\n    \n    const renderList = () => {\n        if(Array.isArray(categories)){\n            return categories.map((c) => {\n                return <li onClick={handleItemClick} id={c.id} key={c.id}>{c.title}</li>;\n            });\n        }\n    }\n    const submitCategory = (e) => {\n        if(e.keyCode === 13){\n            axios.post(CATEGORY_CREATE_URL, {\n                title: categoryText\n            })\n            .then((res) => {\n                setCategories([...categories, res.data])\n            })\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n    }, [])\n    return (\n        <div className=\"categoryList\">\n            <h3>Categories</h3>\n            <ul>\n                <li>\n                    <input \n                        type=\"text\"\n                        onKeyDown={submitCategory}\n                        onChange={(e) => setCategoryText(e.target.value)}\n                        placeholder=\"Create a category\"/>\n                </li>\n                {renderList()}\n            </ul>\n        </div>\n    );\n}\n\nexport default CategoryList;\n","import React, {useState} from 'react';\nimport {REVIEW_CREATE_URL} from '../constants'\nimport axios from 'axios';\n\nconst WeeklyReview = (props) => {\n    const [review, setReview] = useState(\"\");\n\n    const handleTextArea = (e) => {\n        e.preventDefault();\n        setReview(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.post(REVIEW_CREATE_URL, {\n            daily_review: review\n        })\n        .then((res) => {\n            console.log(res)\n            props.history.push(\"/D2D\");\n        })\n        .catch(err => console.warn(err))\n    }\n\n    return (\n      <div>\n        <form onSubmit={handleSubmit}>\n          <textarea\n            name=\"review\"\n            rows=\"8\"\n            cols=\"60\"\n            onChange={handleTextArea}\n          />\n          <button type=\"submit\">Submit Review!</button>\n        </form>\n      </div>\n    );\n}\n\nexport default WeeklyReview;\n","import React, {useState, useEffect} from 'react';\nimport {LOGIN_AUTH_URL, EMAIL_TEST_LOGIN, PASSWORD_TEST_LOGIN} from '../constants'\nimport axios from 'axios';\n\nconst Login = (props) => {\n    const [email, setEmail] = useState(EMAIL_TEST_LOGIN);\n    const [password, setPassword] = useState(PASSWORD_TEST_LOGIN);\n    const [isError404, setIsError404] = useState(false)\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const request = {\n            auth : {\n                email : email,\n                password : password\n            }\n        }\n\n        axios.post(LOGIN_AUTH_URL, request)\n        .then(res => {\n            console.log(res.data);\n            localStorage.setItem(\"jwt\", res.data.jwt)\n            console.log(props.history.location);\n            props.history.push(\"/D2D\");\n        })\n        .catch(err => {\n            setIsError404(true)\n            console.warn(err);\n        });\n\n        console.log(localStorage.getItem('jwt'));\n    }\n    \n    return (\n      <div>\n        <h2>Login</h2>\n        <form onSubmit={handleSubmit}>\n          <label>Email:</label>\n          <input\n            type=\"text\"\n            onChange={(e) => setEmail(e.target.value)}\n            autoComplete=\"on\"\n            value={email}\n          />\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            autoComplete=\"on\"\n          />\n          <button>Login</button>\n        </form>\n      </div>\n    );\n}\n\nexport default Login;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nconst NavBar = () => {\n\n    const logout = () => {\n        localStorage.setItem('jwt', \"null\");\n    }\n\n    return (\n      <nav className=\"topLevelNav\">\n        <Link to=\"/D2D\" className=\"D2DNav navItem\">\n            Day 2 Day\n        </Link>\n        <Link onClick={logout} to=\"\" className=\"logout navItem\">\n          Logout\n        </Link>\n        <Link to=\"/floaters\" className=\"floatingTasksNav navItem\">\n          Floating Tasks\n        </Link>\n      </nav>\n    );\n}\n\nexport default NavBar;\n","import React, {useEffect, useState} from 'react';\nimport CreateTask from \"./CreateTask\";\nimport {renderTasks, loadRequestedTasks} from '../utils'\n\nconst FloatingTasks = () => {\n    const [floaters, setFloaters] = useState([]);\n\n    useEffect(() => {\n        loadRequestedTasks({\n            task_type : \"FLOATERS\"\n        }, setFloaters);\n    }, []);\n\n    return (\n        <React.Fragment>\n            <CreateTask taskType=\"FLOATER\" />\n            {renderTasks(floaters)}\n        </React.Fragment>\n    );\n}\n\nexport default FloatingTasks;\n","import React from 'react';\nimport D2DTasks from './components/D2DTasks';\nimport CategorisedTasks from \"./components/CategorisedTasks\";\nimport SubCategoryList from \"./components/SubCategoryList\";\nimport StatSheet from \"./components/StatSheet\";\nimport CategoryList from \"./components/CategoryList\";\nimport WeeklyReview from \"./components/WeeklyReview\";\nimport {\n        checkAuth,\n        generateCurrentDateString, \n        isSunday, \n        setDefaultHeaders\n} \nfrom './utils';\nimport Login from \"./components/Login\";\nimport axios from 'axios';\nimport NavBar from './components/NavBar';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport FloatingTasks from './components/FloatingTasks';\n\nconst Routes = () => {\n    const onlyRenderReviewRouteIfSunday = () => {\n        if (isSunday()){\n            return (\n              <Route\n                exact\n                path=\"/review\"\n                render={(props) => {\n                  if (!checkAuth) {\n                    props.history.push(\"/login\");\n                  } else {\n                    return (\n                      <div>\n                        <WeeklyReview {...props}/>\n                      </div>\n                    );\n                  }\n                }}\n              />\n            );\n        }\n    }\n    setDefaultHeaders();\n    return (\n      <Router>\n        <div>\n            <Route path=\"/\" component={NavBar}/>\n            {onlyRenderReviewRouteIfSunday()}\n            <Route path=\"/D2D\" render={(props) => {\n                if (!checkAuth()) {\n                    props.history.push(\"/login\");\n                }else{\n                    return (\n                        <div className=\"statSheet\">\n                            <StatSheet {...props}/>\n                        </div>\n                    )\n                }\n            }}/>\n            <Route exact path=\"/floaters\" render={(props) => {\n                if (!checkAuth()) {\n                    props.history.push(\"/login\");\n                } else {\n                    return (\n                      <div className=\"contentWrapper\">\n                        <div className=\"taskContainer\">\n                          <FloatingTasks {...props} />\n                        </div>\n                        <div className=\"listWrapper\">\n                          <CategoryList {...props} />\n                        </div>\n                      </div>\n                    );\n                }\n            }}/>\n            <Route exact path=\"/D2D\" render={(props) => {\n                if (!checkAuth()) {\n                    props.history.push(\"/login\");       \n                }else{\n                    return (\n                        <div className=\"contentWrapper\">\n                            <h3 id=\"currentDate\">{generateCurrentDateString()}</h3>\n                            <div className=\"taskContainer\">\n                                <D2DTasks {...props} />\n                            </div>\n                            <div className=\"listWrapper\">\n                                <CategoryList {...props} />\n                            </div>\n                        </div>\n                    );\n                }\n\n            }} />\n            <Route exact path=\"/category_sub_list/:category_id\" render={(props) => {\n                if (!checkAuth()){\n                    props.history.push(\"/login\");\n                }else{\n                    return (\n                      <div className=\"contentWrapper\">\n                        <h3 id=\"currentDate\">{generateCurrentDateString()}</h3>\n                        <div className=\"taskContainer\">\n                          <D2DTasks {...props} />\n                        </div>\n                        <div className=\"listWrapper\">\n                          <CategoryList {...props} />\n                          <SubCategoryList {...props} />\n                        </div>\n                      </div>\n                    );\n                }\n\n            }}/>\n            <Route exact path=\"/category_sub_list/:category_id/:listId\" render={(props) => {\n                if (!checkAuth()) {\n                    props.history.push(\"/login\");\n                }else{\n                    return (\n                      <div>\n                        <div className=\"contentWrapper\">\n                          <div id=\"spacer\"></div>\n                          <div className=\"taskContainer\">\n                            <CategorisedTasks {...props} />\n                          </div>\n                          <div className=\"listWrapper\">\n                            <CategoryList {...props} />\n                            <SubCategoryList {...props} />\n                          </div>\n                        </div>\n                      </div>\n                    );\n                }\n            }}/>\n            <Route\n                exact\n                path=\"/categorised/:listId\"\n                component={CategorisedTasks}\n            />\n            <Route\n                exact\n                path=\"/login\"\n                component={Login}\n            />\n        </div>\n      </Router>\n    );\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './routes'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}